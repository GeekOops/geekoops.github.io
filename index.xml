<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GeekOops on GeekOops - SysOps for Geekos</title>
    <link>https://geekoops.github.io/</link>
    <description>Recent content in GeekOops on GeekOops - SysOps for Geekos</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 26 Mar 2021 10:49:29 +0100</lastBuildDate><atom:link href="https://geekoops.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Example: Webserver (nginx&#43;php-fpm)</title>
      <link>https://geekoops.github.io/posts/20210326-example-webserver/</link>
      <pubDate>Fri, 26 Mar 2021 10:49:29 +0100</pubDate>
      
      <guid>https://geekoops.github.io/posts/20210326-example-webserver/</guid>
      <description>In this post we are going to setup our example jellyfish host to run nginx and php-fpm. The provided example playbook should be a good starting point for your own webserver.
In addition, the exaple playbook also setups the jellyfish.conf nginx virtual host file to run php files with php-fpm and we create a typical phpinfo.php file to test our setup
Example    This example playbook sets up a webserver with nginx and php-fpm.</description>
    </item>
    
    <item>
      <title>Ansible NEXT server</title>
      <link>https://geekoops.github.io/posts/20210326-next/</link>
      <pubDate>Fri, 26 Mar 2021 09:54:20 +0100</pubDate>
      
      <guid>https://geekoops.github.io/posts/20210326-next/</guid>
      <description>The geekoops-next ansible role makes it easy to setup your own PXE boot server. It configures dnsmasq to run a DHCP and TFTP server, from which your PXE clients can boot from. You can turn the DNS functionality of dnsmasq off, so that it is possible to run this PXE server next to another DNS server on the same host.
This role also extracts a minimum syslinux installation into your tftp directory.</description>
    </item>
    
    <item>
      <title>Ansible PureFTPd</title>
      <link>https://geekoops.github.io/posts/20210326-pureftpd/</link>
      <pubDate>Fri, 26 Mar 2021 09:49:33 +0100</pubDate>
      
      <guid>https://geekoops.github.io/posts/20210326-pureftpd/</guid>
      <description>The geekoops-pureftpd role is a configurable ansible role for setting up a PureFTPd ftp server. I choose PureFTPd because it appears to be more secure than ProFTPd. In comparison to vsftp, one server program can run both IPv4 and IPv6.
This role works on openSUSE Leap.
Role Variables    PureFTPd is a highly configurable ansible role. See the following list of possible variables, but you probably don&amp;rsquo;t need much of them.</description>
    </item>
    
    <item>
      <title>Ansible php-fpm</title>
      <link>https://geekoops.github.io/posts/20210326-php-fpm/</link>
      <pubDate>Fri, 26 Mar 2021 09:42:03 +0100</pubDate>
      
      <guid>https://geekoops.github.io/posts/20210326-php-fpm/</guid>
      <description>The geekoops-php-fpm role is intended as a standalone php-fpm deployment that works in conjunction with any webserver. I use it with nginx in production. In principle it should also work together with apache2, but that&amp;rsquo;s something currently untested.
This role works with openSUSE Leap and is intended to ship enough requirements for most web applications to run. I run it in conjunction with Mediawiki and Nextcloud.
Role Variables    This ansible role comes with a minimal set of configuration parameters.</description>
    </item>
    
    <item>
      <title>Ansible nginx</title>
      <link>https://geekoops.github.io/posts/20210326-ansible-nginx/</link>
      <pubDate>Fri, 26 Mar 2021 09:27:50 +0100</pubDate>
      
      <guid>https://geekoops.github.io/posts/20210326-ansible-nginx/</guid>
      <description>Welcome to GeekOops! This is my first role of the project. The role is as simple as it suggests. It installs nginx and optionally opens the firewall ports.
Usage example    Let&amp;rsquo;s assume we want to roll this role out on our imaginary jellyfish server. We need to have root ssh access to jellyfish. Ansible also supports sudo, but this is not covered here. So first make sure you can do the following</description>
    </item>
    
  </channel>
</rss>
